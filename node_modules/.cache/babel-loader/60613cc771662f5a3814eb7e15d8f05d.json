{"ast":null,"code":"var _jsxFileName = \"/Users/saad/WebstormProjects/temp-caster/src/App.js\";\nimport './App.css';\nimport React from \"react\";\nimport WeatherCard from './WeatherCard.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: null,\n      data: null\n    };\n    this.card = /*#__PURE__*/React.createRef();\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fetchCityWeather = this.fetchCityWeather.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let data = new FormData(event.target);\n    this.setState({\n      city: data.get(\"city\")\n    });\n    document.getElementById('cityInput').value = \"\";\n    this.fetchCityWeather();\n  }\n\n  fetchCityWeather() {\n    fetch(\"https://wttr.in/\" + this.state.city + \"?format=j1\").then(response => response.json()).then(data => {\n      this.setState({\n        data: data\n      });\n      const currData = data[\"current_condition\"];\n      const areaData = data[\"nearest_area\"];\n      const realCity = areaData[0][\"areaName\"][0][\"value\"] + \", \" + areaData[0][\"region\"][0][\"value\"] + \", \" + areaData[0][\"country\"][0][\"value\"];\n      this.card.current.updateCard(currData, realCity);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TempCaster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"City:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"cityInput\",\n            name: \"city\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(WeatherCard, {\n        ref: this.card,\n        data: this.state.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/saad/WebstormProjects/temp-caster/src/App.js"],"names":["React","WeatherCard","App","Component","constructor","props","state","city","data","card","createRef","handleSubmit","bind","fetchCityWeather","event","preventDefault","FormData","target","setState","get","document","getElementById","value","fetch","then","response","json","currData","areaData","realCity","current","updateCard","render"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;;;AAGA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAG9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,IADG;AAETC,MAAAA,IAAI,EAAE;AAFG,KAAb;AAIA,SAAKC,IAAL,gBAAYT,KAAK,CAACU,SAAN,EAAZ;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACH;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIP,IAAI,GAAG,IAAIQ,QAAJ,CAAaF,KAAK,CAACG,MAAnB,CAAX;AACA,SAAKC,QAAL,CAAc;AAACX,MAAAA,IAAI,EAAGC,IAAI,CAACW,GAAL,CAAS,MAAT;AAAR,KAAd;AACAC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAArC,GAA6C,EAA7C;AACA,SAAKT,gBAAL;AACH;;AAEDA,EAAAA,gBAAgB,GAAG;AACfU,IAAAA,KAAK,CAAC,qBAAqB,KAAKjB,KAAL,CAAWC,IAAhC,GAAuC,YAAxC,CAAL,CACKiB,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUhB,IAAI,IAAI;AACV,WAAKU,QAAL,CAAc;AAACV,QAAAA,IAAI,EAAGA;AAAR,OAAd;AACA,YAAMmB,QAAQ,GAAGnB,IAAI,CAAC,mBAAD,CAArB;AACA,YAAMoB,QAAQ,GAAGpB,IAAI,CAAC,cAAD,CAArB;AACA,YAAMqB,QAAQ,GAAGD,QAAQ,CAAC,CAAD,CAAR,CAAY,UAAZ,EAAwB,CAAxB,EAA2B,OAA3B,IAAsC,IAAtC,GAA6CA,QAAQ,CAAC,CAAD,CAAR,CAAY,QAAZ,EAAsB,CAAtB,EAAyB,OAAzB,CAA7C,GAAiF,IAAjF,GAAwFA,QAAQ,CAAC,CAAD,CAAR,CAAY,SAAZ,EAAuB,CAAvB,EAA0B,OAA1B,CAAzG;AACA,WAAKnB,IAAL,CAAUqB,OAAV,CAAkBC,UAAlB,CAA6BJ,QAA7B,EAAuCE,QAAvC;AACH,KARL;AASH;;AAEDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,QAAQ,EAAE,KAAKrB,YAArB;AAAA,gCACI;AAAA,2CACI;AAAO,YAAA,EAAE,EAAC,WAAV;AAAsB,YAAA,IAAI,EAAC,MAA3B;AAAkC,YAAA,IAAI,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,kBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAQI,QAAC,WAAD;AAAa,QAAA,GAAG,EAAE,KAAKF,IAAvB;AAA6B,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWE;AAA9C;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AA/C6B;;AAkDlC,eAAeN,GAAf","sourcesContent":["import './App.css';\nimport React from \"react\";\nimport WeatherCard from './WeatherCard.js'\n\n\nclass App extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            city: null,\n            data: null\n        }\n        this.card = React.createRef();\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.fetchCityWeather = this.fetchCityWeather.bind(this);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let data = new FormData(event.target);\n        this.setState({city : data.get(\"city\")});\n        document.getElementById('cityInput').value = \"\";\n        this.fetchCityWeather();\n    }\n\n    fetchCityWeather() {\n        fetch(\"https://wttr.in/\" + this.state.city + \"?format=j1\")\n            .then(response => response.json())\n            .then(data => {\n                this.setState({data : data});\n                const currData = data[\"current_condition\"];\n                const areaData = data[\"nearest_area\"];\n                const realCity = areaData[0][\"areaName\"][0][\"value\"] + \", \" + areaData[0][\"region\"][0][\"value\"] + \", \" + areaData[0][\"country\"][0][\"value\"];\n                this.card.current.updateCard(currData, realCity);\n            })\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <h1>TempCaster</h1>\n                <form onSubmit={this.handleSubmit}>\n                    <label>City:\n                        <input id=\"cityInput\" name=\"city\" type=\"text\" />\n                    </label>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n                <WeatherCard ref={this.card} data={this.state.data} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}