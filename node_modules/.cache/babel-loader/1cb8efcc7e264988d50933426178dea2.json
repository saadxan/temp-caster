{"ast":null,"code":"const axios = require('axios');\n\nconst {\n  url\n} = require('./constants');\n\nfunction sleep(ms) {\n  return new Promise(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n\nasync function getToken(keywords) {\n  let token = null;\n\n  try {\n    let res = await axios.get(url, {\n      params: {\n        q: keywords\n      }\n    });\n    token = res.data.match(/vqd=([\\d-]+)\\&/)[1];\n  } catch (error) {\n    console.error(error);\n  }\n\n  return new Promise((resolve, reject) => {\n    if (!token) reject('Failed to get token');\n    resolve(token);\n  });\n}\n\nmodule.exports = {\n  sleep,\n  getToken\n};","map":{"version":3,"sources":["/Users/saad/WebstormProjects/temp-caster/node_modules/duckduckgo-images-api/src/utils.js"],"names":["axios","require","url","sleep","ms","Promise","resolve","setTimeout","getToken","keywords","token","res","get","params","q","data","match","error","console","reject","module","exports"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAM;AAACC,EAAAA;AAAD,IAAQD,OAAO,CAAC,aAAD,CAArB;;AAEA,SAASE,KAAT,CAAeC,EAAf,EAAmB;AACf,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC1BC,IAAAA,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAV;AACH,GAFM,CAAP;AAGH;;AAED,eAAeI,QAAf,CAAwBC,QAAxB,EAAkC;AAE9B,MAAIC,KAAK,GAAG,IAAZ;;AACA,MAAI;AACA,QAAIC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAUV,GAAV,EAAe;AAC3BW,MAAAA,MAAM,EAAE;AACJC,QAAAA,CAAC,EAAEL;AADC;AADmB,KAAf,CAAhB;AAMAC,IAAAA,KAAK,GAAGC,GAAG,CAACI,IAAJ,CAASC,KAAT,CAAe,gBAAf,EAAiC,CAAjC,CAAR;AAEH,GATD,CASE,OAAOC,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;;AAED,SAAO,IAAIZ,OAAJ,CAAY,CAACC,OAAD,EAAUa,MAAV,KAAqB;AACpC,QAAI,CAACT,KAAL,EACIS,MAAM,CAAC,qBAAD,CAAN;AACJb,IAAAA,OAAO,CAACI,KAAD,CAAP;AACH,GAJM,CAAP;AAMH;;AAEDU,MAAM,CAACC,OAAP,GAAgB;AACZlB,EAAAA,KADY;AAEZK,EAAAA;AAFY,CAAhB","sourcesContent":["const axios = require('axios');\r\nconst {url} = require('./constants')\r\n\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, ms)\r\n    })\r\n}\r\n\r\nasync function getToken(keywords) {\r\n\r\n    let token = null;\r\n    try {\r\n        let res = await axios.get(url, {\r\n            params: {\r\n                q: keywords\r\n            }\r\n        })\r\n\r\n        token = res.data.match(/vqd=([\\d-]+)\\&/)[1]\r\n\r\n    } catch (error) {\r\n        console.error(error)\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        if (!token)\r\n            reject('Failed to get token')\r\n        resolve(token)\r\n    })\r\n\r\n}\r\n\r\nmodule.exports ={\r\n    sleep,\r\n    getToken\r\n}\r\n"]},"metadata":{},"sourceType":"script"}